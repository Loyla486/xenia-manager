<Application x:Class="Xenia_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Xenia_Manager"
             StartupUri="Windows\MainWindow.xaml"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Themes -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Assets/Themes/Light.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Animations -->
            <!-- Fade Out -->
            <Storyboard x:Key="FadeOutAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="1.0" To="0.0"
                                 Duration="0:0:0.15" />
            </Storyboard>

            <!-- Fade In -->
            <Storyboard x:Key="FadeInAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 From="0.0" To="1.0"
                                 Duration="0:0:0.15" />
            </Storyboard>

            <!-- Fonts -->
            <FontFamily x:Key="SegoeFluent">
                pack://application:,,,/Xenia Manager;component/Assets/Font/Segoe Fluent Icons.ttf#Segoe Fluent
            </FontFamily>

            <FontFamily x:Key="SegoeFluentIcons">
                pack://application:,,,/Xenia Manager;component/Assets/Font/Segoe Fluent Icons.ttf#Segoe Fluent Icons
            </FontFamily>

            <!-- UI Styles -->
            <!-- Buttons -->
            <!-- Default button -->
            <Style x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="FontSize" Value="28"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Margin" Value="150,0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="2"
                                    CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Exit Button-->
            <Style x:Key="ExitButton" TargetType="Button">
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="Content" Value="&#xE711;"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluentIcons}" />
                <Setter Property="FontSize" Value="32" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,10,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Welcome Dialog Install Button -->
            <Style x:Key="WD_Install_Button" TargetType="Button">
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,2,0,2" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- MainWindow Navigation Button-->
            <Style x:Key="NavigationButton" TargetType="Button">
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="0,2,0,2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="NavigationButtonIcon" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluentIcons}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="NavigationButtonText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <!-- Library Add Game -->
            <Style x:Key="AddGame" TargetType="Button">
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="0,0,0,0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AddGameText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}" />
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>

            <!-- Library Game Button -->
            <Style x:Key="GameCoverButtons" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushSecondary}"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                <Border CornerRadius="10">
                                    <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTrigger}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Border -->
            <!-- Seperation Line -->
            <Style x:Key="SeperationLine" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Height" Value="2"/>
            </Style>

            <!-- Patch/Setting Border -->
            <Style x:Key="SettingBorder" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource SettingBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SettingBorderBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Style>

            <!-- CheckBox -->
            <Style x:Key="CheckboxStyle" TargetType="CheckBox">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Border x:Name="Background" 
                                    Background="{DynamicResource CheckboxBackgroundColor}"
                                    CornerRadius="10"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="2">
                                <ToggleButton x:Name="toggleButton"
                                              IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Background="Transparent"
                                              BorderBrush="Transparent">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <TextBlock x:Name="toggleText"
                                                       Text="OFF"
                                                       FontSize="16"
                                                       FontFamily="{StaticResource SegoeFluent}"
                                                       FontWeight="SemiBold"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Foreground="{DynamicResource CheckboxForegroundColor}" />
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="toggleText" Property="Text" Value="ON" />
                                                                <Setter TargetName="toggleText" Property="Foreground" Value="{DynamicResource CheckboxForegroundColorIsChecked}" />
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushSecondary}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource BorderBrushSecondary}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ComboBox -->
            <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="Border"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="8"
                                Margin="2,2,2,2">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxBackgroundColorIsMouseOver}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushColorIsMouseOver}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxBackgroundColorIsSelected}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushColorIsSelected}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                <Setter Property="Background" Value="{DynamicResource ComboBoxDropdownBackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="Margin" Value="20,10"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="2"
                                        CornerRadius="10">
                                    <Grid>
                                        <ToggleButton Name="ToggleButton"
                                                      Grid.Column="2"
                                                      Focusable="false"
                                                      IsChecked="{Binding Path=IsDropDownOpen, 
                                                              Mode=TwoWay, 
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press">
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border x:Name="Border"
                                                            Background="Transparent"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="2"
                                                            CornerRadius="8">
                                                        <Path x:Name="Arrow"
                                                              Fill="{DynamicResource ComboBoxArrowColor}"
                                                              HorizontalAlignment="Right"
                                                              VerticalAlignment="Center"
                                                              Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                        </ToggleButton>
                                        <ContentPresenter Name="ContentSite"
                                                          IsHitTestVisible="False"
                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                          Margin="10,0"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"/>
                                        <TextBox x:Name="PART_EditableTextBox"
                                                 Style="{x:Null}"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Margin="3,3,23,3"
                                                 Focusable="True"
                                                 Background="Transparent"
                                                 Foreground="{DynamicResource ForegroundColor}"
                                                 Visibility="Hidden"
                                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                        <Popup Name="Popup"
                                               Placement="Bottom"
                                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                               IsOpen="{TemplateBinding IsDropDownOpen}"
                                               AllowsTransparency="True"
                                               Focusable="False"
                                               PopupAnimation="Slide">
                                            <Grid Name="DropDown"
                                                  SnapsToDevicePixels="True"
                                                  MinWidth="{TemplateBinding ActualWidth}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                <Border x:Name="DropDownBorder"
                                                        Background="{DynamicResource ComboBoxDropdownBackgroundColor}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="2"
                                                        CornerRadius="10"/>
                                                <ScrollViewer Margin="0"
                                                              SnapsToDevicePixels="True"
                                                              HorizontalScrollBarVisibility="Hidden"
                                                              VerticalScrollBarVisibility="Hidden"
                                                              CanContentScroll="False">
                                                    <StackPanel IsItemsHost="True"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ContextMenu -->
            <Style TargetType="ContextMenu">
                <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="2"
                                CornerRadius="5">
                                <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        VirtualizingStackPanel.IsVirtualizing="False"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="MenuItem">
                            <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Padding" Value="8,4"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="MenuItem">
                                        <Border Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="5">
                                            <StackPanel Orientation="Horizontal">
                                                <ContentPresenter Content="{TemplateBinding Header}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource HighlightColor}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ListBox -->
            <Style TargetType="ListBox">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="Border"
                                            Background="Transparent"
                                            CornerRadius="5"
                                            Cursor="Hand"
                                            Padding="5">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightColor}" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxBackgroundColorIsSelected}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushColorIsSelected}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border CornerRadius="0,0,20,20">
                                <TextBlock Text="{Binding}" TextWrapping="Wrap" Margin="10"/>
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- RadioButton-->
            <Style TargetType="RadioButton">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            </Style>

            <!-- TextBlock -->
            <!-- Title TextBlock-->
            <Style x:Key="TitleTextBlock" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
            </Style>

            <!-- Setting TextBlock -->
            <Style x:Key="SettingText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="{DynamicResource SettingForegroundColor}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="TextAlignment" Value="Center" />
            </Style>

            <!-- EditGamePatch Title-->
            <Style x:Key="EGPTitleTextBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                <Setter Property="TextAlignment" Value="Center" />
            </Style>

            <!-- TextBox -->
            <!-- SearchBox -->
            <Style x:Key="SearchBox" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="10,0,0,0" />
                <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="10,0,0,0">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Default TextBox style -->
            <Style x:Key="TextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Cursor" Value="IBeam"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushIsMouseOver}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushIsKeyboardFocused}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ToolTip -->
            <Style TargetType="ToolTip">
                <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="5">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ProgressBar -->
            <Style TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid>
                                <Border CornerRadius="5"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="PART_Track">
                                        <Rectangle x:Name="PART_Indicator"
                                               Fill="{TemplateBinding Foreground}"
                                               HorizontalAlignment="Left" />
                                    </Grid>
                                </Border>
                                <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="{StaticResource SegoeFluent}"
                                       FontSize="20"
                                       Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0}%}"
                                       Foreground="{StaticResource ForegroundColor}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
